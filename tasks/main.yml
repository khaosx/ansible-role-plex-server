# tasks/main.yml  

- name: Check if secrets.yml exists
  ansible.builtin.stat:
    path: "{{ role_path }}/vars/secrets.yml"
  register: plex_server_secrets_file

- name: Include secret variables if the secrets file exists
  ansible.builtin.include_vars:
    file: secrets.yml
    dir: "{{ role_path }}/vars"
  when: plex_server_secrets_file.stat.exists
  tags: always

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - nfs-common
      - sqlite3
    state: present
    update_cache: true

- name: Add GPG key for Plex
  ansible.builtin.get_url:
    url: https://downloads.plex.tv/plex-keys/PlexSign.key
    dest: /usr/share/keyrings/plexserver.asc
    mode: '0644'

- name: Add Plex repository
  ansible.builtin.apt_repository:
    repo: >
      deb [signed-by=/usr/share/keyrings/plexserver.asc arch=amd64] 
      https://downloads.plex.tv/repo/deb 
      {{ ansible_facts['distribution'] | lower }} 
      {{ ansible_facts['distribution_release'] | lower }} 
      main
    state: present
    filename: plex

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true

- name: Install Plex Media Server
  ansible.builtin.apt:
    name: plexmediaserver
    state: latest

- name: Claim Plex Media Server
  ansible.builtin.command: >
    bash -c "PLEX_CLAIM={{ plex_server_plex_claim_token }} dpkg-reconfigure plexmediaserver"
  when: plex_server_plex_claim_token | default('') | length > 0

- name: Create NFS mount point
  ansible.builtin.file:
    path: "{{ plex_server_nfs_mount_point }}"
    state: directory
    owner: "{{ plex_server_plex_user }}"
    group: "{{ plex_server_plex_group }}"
    mode: '0755'

- name: Mount NFS share
  ansible.posix.mount:
    src: "{{ plex_server_nfs_server }}:{{ plex_server_nfs_export }}"
    path: "{{ plex_server_nfs_mount_point }}"
    fstype: nfs
    opts: rw
    state: mounted

- name: Ensure NFS share is mounted on boot
  ansible.posix.mount:
    src: "{{ plex_server_nfs_server }}:{{ plex_server_nfs_export }}"
    path: "{{ plex_server_nfs_mount_point }}"
    fstype: nfs
    opts: defaults
    state: mounted

- name: Start and enable Plex Media Server
  ansible.builtin.service:
    name: plexmediaserver
    state: started
    enabled: yes

# Optional Firewall Configuration
- name: Configure Firewall (UFW)
  when: plex_server_firewall_enabled
  block:

    - name: Set logging
      community.general.ufw:
        logging: "{{ plex_server_firewall_logging_state }}"
      notify: plex_server_restart_ufw

    - name: Turn off IPv6 in UFW
      ansible.builtin.replace:
        path: /etc/default/ufw
        regexp: 'IPV6=yes'
        replace: 'IPV6=no'

    - name: Allow all traffic <-- RFC1918
      community.general.ufw:
        rule: allow
        src: '{{ item }}'
      loop:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
      notify: plex_server_restart_ufw

    - name: Allow Plex services <-- RFC1918
      community.general.ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: "{{ item.protocol }}"
        src: "{{ item.source }}"
        comment: "{{ item.comment }}"
      with_items: '{{ plex_server_firewall__rules }}'
      notify: Reload firewall

    - name: Deny everything else and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
      notify: plex_server_restart_ufw
